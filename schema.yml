openapi: 3.0.3
info:
  title: mt_project
  version: 1.0.0
  description: Manage your project and create tasks for your team
paths:
  /projects/:
    get:
      operationId: projects_list
      parameters:
      - in: query
        name: due_date
        schema:
          type: string
          format: date-time
      - in: query
        name: due_date__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: due_date__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: due_date__range
        schema:
          type: array
          items:
            type: string
            format: date-time
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__iexact
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: total_tasks
        schema:
          type: number
        description: Total Tasks
      - in: query
        name: total_tasks__gt
        schema:
          type: number
        description: Total Tasks greater than
      - in: query
        name: total_tasks__lt
        schema:
          type: number
        description: Total Tasks less than
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetail'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /tasks/:
    get:
      operationId: tasks_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskList'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreateUpdate'
          description: ''
  /tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCreateUpdate'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AssignedUser:
      type: object
      properties:
        user_id:
          type: integer
        assigned_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assigned_at
      - user_id
    PaginatedProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        description:
          type: string
        due_date:
          type: string
          format: date-time
        total_tasks:
          type: string
          readOnly: true
    PatchedTask:
      type: object
      properties:
        project_id:
          type: integer
        project:
          type: string
          format: uri
          readOnly: true
        project_name:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        due_date:
          type: string
          format: date-time
        users:
          type: array
          items:
            $ref: '#/components/schemas/AssignedUser'
    PriorityEnum:
      enum:
      - High
      - Medium
      - Low
      type: string
      description: |-
        * `High` - High
        * `Medium` - Medium
        * `Low` - Low
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        description:
          type: string
        due_date:
          type: string
          format: date-time
        total_tasks:
          type: string
          readOnly: true
      required:
      - id
      - name
      - total_tasks
    ProjectDetail:
      type: object
      properties:
        name:
          type: string
          maxLength: 120
        description:
          type: string
        due_date:
          type: string
          format: date-time
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          readOnly: true
      required:
      - name
      - tasks
    StatusEnum:
      enum:
      - Pending
      - In_Progress
      - Completed
      type: string
      description: |-
        * `Pending` - Pending
        * `In_Progress` - In Progress
        * `Completed` - Completed
    Task:
      type: object
      properties:
        project_id:
          type: integer
        project:
          type: string
          format: uri
          readOnly: true
        project_name:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 120
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        due_date:
          type: string
          format: date-time
        users:
          type: array
          items:
            $ref: '#/components/schemas/AssignedUser'
      required:
      - id
      - name
      - priority
      - project
      - project_id
      - project_name
      - users
    TaskCreateUpdate:
      type: object
      properties:
        project:
          type: integer
        name:
          type: string
          maxLength: 120
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        due_date:
          type: string
          format: date-time
        users:
          type: array
          items:
            $ref: '#/components/schemas/AssignedUser'
      required:
      - name
      - priority
      - project
      - users
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
